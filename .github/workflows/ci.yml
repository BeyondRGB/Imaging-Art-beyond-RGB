name: CI Pipeline

on:
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:

env:
  VCPKG_BINARY_SOURCES: 'clear;x-gha,readwrite'

jobs:
  build-and-test:
    name: Build & Test (${{ matrix.platform }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            platform: macos
          - os: ubuntu-latest
            platform: linux
          - os: windows-latest
            platform: windows

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Linux dependencies
        if: matrix.platform == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake ninja-build

      - name: Install macOS dependencies
        if: matrix.platform == 'macos'
        run: brew install cmake ninja

      - name: Setup MSVC
        if: matrix.platform == 'windows'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache vcpkg
        uses: actions/cache@v4
        with:
          path: |
            backend/vcpkg/installed
            backend/vcpkg/buildtrees
          key: vcpkg-${{ matrix.platform }}-${{ hashFiles('backend/dependencies.txt') }}
          restore-keys: vcpkg-${{ matrix.platform }}-

      - name: Setup vcpkg cache integration
        uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Build Backend (macOS)
        if: matrix.platform == 'macos'
        working-directory: backend
        run: |
          chmod +x *.sh
          ./osx_config_environment.sh
          ./osx_release.sh

      - name: Build Backend (Linux)
        if: matrix.platform == 'linux'
        working-directory: backend
        run: |
          chmod +x *.sh
          ./linux_config_environment.sh
          ./linux_release.sh

      - name: Setup vcpkg (Windows)
        if: matrix.platform == 'windows'
        working-directory: backend
        shell: cmd
        run: |
          if not exist "vcpkg\" mkdir vcpkg
          mklink /J vcpkg\scripts C:\vcpkg\scripts
          for /F "tokens=*" %%A in (dependencies.txt) do (
            C:\vcpkg\vcpkg.exe install %%A:x64-windows
          )

      - name: Build Backend (Windows)
        if: matrix.platform == 'windows'
        working-directory: backend
        shell: cmd
        run: call win10_release.bat

      - name: Run Unit Tests (Unix)
        if: matrix.platform != 'windows'
        continue-on-error: true
        working-directory: backend/build/Release
        run: |
          if [ -f "unit_tests" ]; then
            ./unit_tests
          else
            echo "Unit tests not found, skipping"
          fi

      - name: Run Unit Tests (Windows)
        if: matrix.platform == 'windows'
        continue-on-error: true
        working-directory: backend/build/Release
        shell: cmd
        run: |
          if exist "unit_tests.exe" (
            unit_tests.exe
          ) else (
            echo Unit tests not found, skipping
          )

      - name: Install Frontend Dependencies
        working-directory: frontend
        run: npm install

      - name: Build Frontend
        working-directory: frontend
        run: npm run svelte-build

      - name: Upload Backend Binary
        uses: actions/upload-artifact@v4
        with:
          name: backend-${{ matrix.platform }}
          path: |
            backend/build/Release/beyond-rgb-backend*
            backend/build/beyond-rgb-backend*
          if-no-files-found: warn
          retention-days: 7

